{"version":3,"sources":["routes/Course/Assign/components/index.js"],"names":["Content","Assign","connect","_ref","assign","loading","models","getTodayCourseData","dispatch","_this","props","type","afterResponse","resp","data","payload","valueField","method","url","$$","getStore","userRoleName","this","todayCourse","console","log","map","item","index","react__WEBPACK_IMPORTED_MODULE_11___default","a","createElement","react_vertical_timeline_component__WEBPACK_IMPORTED_MODULE_16__","className","courseName","date","courseTime","iconStyle","background","color","icon","react_icons_io__WEBPACK_IMPORTED_MODULE_14__","courseRoom","courseTopic","antd_lib_layout__WEBPACK_IMPORTED_MODULE_10___default","length","CountCourse","antd_lib_timeline__WEBPACK_IMPORTED_MODULE_1___default","mode","Item","dot","antd_lib_icon__WEBPACK_IMPORTED_MODULE_3___default","style","fontSize","BaseComponent"],"mappings":"oXAUOA,cAMcC,EAJpBC,kBAAQ,SAAAC,GAAA,MAAwB,CAC7BC,OADKD,EAAEC,OAEPC,QAFKF,EAAUE,QAEEC,OAAOF,uNAOxBG,mBAAqB,YAQjBC,EAPmBC,EAAKC,MAAjBF,UAOE,CACLG,KAAM,kBACNC,cAAe,SAAAC,GAAI,OAAIA,EAAKC,MAK5BC,QAAS,CACLC,WAAY,cACZC,OAAQ,MACRC,IAfiC,iBAArCC,IAAGC,SAAS,QAAQC,aACV,qDAEA,4IATdC,KAAKf,2DA0BK,IAEHgB,EADUD,KAAKZ,MAAfN,OACAmB,YAmBP,OAlBAC,QAAQC,IAAIF,GACOA,EAAYG,IAAI,SAAUC,EAAMC,GAE/C,OADAJ,QAAQC,IAAIE,GAERE,EAAAC,EAAAC,cAACC,EAAA,wBAAD,CACIC,UAAWN,EAAKO,WAChBC,KAAMR,EAAKS,WACXC,UAAW,CAACC,WAAY,oBAAqBC,MAAO,QACpDC,KAAMX,EAAAC,EAAAC,cAACU,EAAA,EAAD,OAENZ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCAAd,iCAAsDN,EAAKO,YAC3DL,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sCAAd,iCAAyDN,EAAKe,YAC9Db,EAAAC,EAAAC,cAAA,0CACUJ,EAAKgB,iDAQtB,IACEpB,EAAeD,KAAKZ,MAAMN,OAA1BmB,YACP,OACIM,EAAAC,EAAAC,cAAAa,EAAAd,EAAA,CAAQG,UAAU,gCACdJ,EAAAC,EAAAC,cAAC/B,EAAD,KAC6B,IAAvBuB,EAAYsB,OACVhB,EAAAC,EAAAC,cAACC,EAAA,iBAAD,KACKV,KAAKwB,eAGVjB,EAAAC,EAAAC,cAAAgB,EAAAjB,EAAA,CAAUkB,KAAK,aACXnB,EAAAC,EAAAC,cAAAgB,EAAAjB,EAAUmB,KAAV,CAAeC,IAAKrB,EAAAC,EAAAC,cAAAoB,EAAArB,EAAA,CAAMnB,KAAK,iBAAiByC,MAAO,CAAEC,SAAU,UAAcd,MAAM,OACnFV,EAAAC,EAAAC,cAAA,mEAhEIuB","file":"static/js/16.b48b13b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {connect} from 'dva';\r\nimport {Layout, Timeline, Icon} from 'antd';\r\nimport BaseComponent from 'components/BaseComponent';\r\nimport {IoIosBook} from 'react-icons/io';\r\nimport './index.less';\r\nimport {VerticalTimeline, VerticalTimelineElement} from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport $$ from \"cmn-utils\";\r\n\r\nconst {Content} = Layout;\r\n\r\n@connect(({assign, loading}) => ({\r\n    assign,\r\n    loading: loading.models.assign\r\n}))  //dva connect\r\nexport default class Assign extends BaseComponent {\r\n    componentDidMount() {\r\n        this.getTodayCourseData();\r\n    }\r\n\r\n    getTodayCourseData = () => {\r\n        const {dispatch} = this.props;\r\n        var sendURL = ''\r\n        if ($$.getStore('user').userRoleName === \"学生\") {\r\n            sendURL = \"http://192.168.43.191:8010/api/student/todayCourse\";\r\n        } else {\r\n            sendURL = \"http://192.168.43.191:8010/api/teacher/todayCourse\"\r\n        }\r\n        dispatch({\r\n            type: 'assign/@request',\r\n            afterResponse: resp => resp.data,\r\n            // afterResponse: function(resp){\r\n            //     console.log(resp.data);\r\n            //     return resp.data;\r\n            // },\r\n            payload: {\r\n                valueField: 'todayCourse',\r\n                method: 'GET',\r\n                url: sendURL\r\n            }\r\n        })\r\n    }\r\n\r\n    CountCourse() {\r\n        const {assign} = this.props;\r\n        const {todayCourse} = assign;\r\n        console.log(todayCourse);\r\n        let courseAssign = todayCourse.map(function (item, index) {\r\n            console.log(item);\r\n            return (\r\n                <VerticalTimelineElement\r\n                    className={item.courseName}\r\n                    date={item.courseTime}\r\n                    iconStyle={{background: 'rgb(33, 150, 243)', color: '#fff'}}\r\n                    icon={<IoIosBook/>}\r\n                >\r\n                    <h3 className=\"vertical-timeline-element-title\">课程名称：{item.courseName}</h3>\r\n                    <h4 className=\"vertical-timeline-element-subtitle\">课程地点：{item.courseRoom}</h4>\r\n                    <p>\r\n                        课程主题：{item.courseTopic}\r\n                    </p>\r\n                </VerticalTimelineElement>\r\n            )\r\n        });\r\n        return courseAssign;\r\n    };\r\n\r\n    render() {\r\n        const {todayCourse} = this.props.assign;\r\n        return (\r\n            <Layout className=\"full-layout page assign-page\">\r\n                <Content>\r\n                    {(todayCourse.length !== 0) ?\r\n                        <VerticalTimeline>\r\n                            {this.CountCourse()}\r\n                        </VerticalTimeline>\r\n                        :\r\n                        <Timeline mode=\"alternate\">\r\n                            <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />} color=\"red\">\r\n                                <h2>\r\n                                    今日没有课程！\r\n                                </h2>\r\n                            </Timeline.Item>\r\n                        </Timeline>\r\n                    }\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}